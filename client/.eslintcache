[{"/Users/scottbillings/Desktop/D&D/client/src/index.js":"1","/Users/scottbillings/Desktop/D&D/client/src/App.js":"2","/Users/scottbillings/Desktop/D&D/client/src/Pages/Join.js":"3","/Users/scottbillings/Desktop/D&D/client/src/Pages/Play.js":"4","/Users/scottbillings/Desktop/D&D/client/src/Components/InputBar.js":"5","/Users/scottbillings/Desktop/D&D/client/src/Components/DiceRoll.js":"6","/Users/scottbillings/Desktop/D&D/client/src/Components/Character.js":"7","/Users/scottbillings/Desktop/D&D/client/src/Components/DiceLoad.js":"8","/Users/scottbillings/Desktop/D&D/client/src/Components/Messaging/Messaging.js":"9","/Users/scottbillings/Desktop/D&D/client/src/Components/Messaging/DropDowns.js":"10","/Users/scottbillings/Desktop/D&D/client/src/Components/Messaging/MessageInput.js":"11","/Users/scottbillings/Desktop/D&D/client/src/Components/Messaging/MessageDisplay.js":"12"},{"size":145,"mtime":1611170583691,"results":"13","hashOfConfig":"14"},{"size":340,"mtime":1611171411057,"results":"15","hashOfConfig":"14"},{"size":1038,"mtime":1611256587628,"results":"16","hashOfConfig":"14"},{"size":3555,"mtime":1613086694215,"results":"17","hashOfConfig":"14"},{"size":4023,"mtime":1613072679062,"results":"18","hashOfConfig":"14"},{"size":2627,"mtime":1612987522589,"results":"19","hashOfConfig":"14"},{"size":2694,"mtime":1613070695253,"results":"20","hashOfConfig":"14"},{"size":322,"mtime":1613015528856,"results":"21","hashOfConfig":"14"},{"size":394,"mtime":1613087561211,"results":"22","hashOfConfig":"14"},{"size":1146,"mtime":1613159750054,"results":"23","hashOfConfig":"14"},{"size":593,"mtime":1613155046104,"results":"24","hashOfConfig":"14"},{"size":220,"mtime":1613087528122,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"feu3fp",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/scottbillings/Desktop/D&D/client/src/index.js",[],["53","54"],"/Users/scottbillings/Desktop/D&D/client/src/App.js",[],"/Users/scottbillings/Desktop/D&D/client/src/Pages/Join.js",[],"/Users/scottbillings/Desktop/D&D/client/src/Pages/Play.js",["55","56","57","58","59","60","61","62"],"import React, {useState, useEffect} from  'react';\nimport queryString from 'query-string';\nimport io from 'socket.io-client';\nimport InputBar from '../Components/InputBar';\nimport './Play.css';\nimport Character from '../Components/Character';\nimport Messaging from '../Components/Messaging/Messaging';\n\nlet socket;\n\n\n\nconst Play\n = ({ location }) => {\n   const [name, setName] = useState('');\n   const [room, setRoom] = useState('');\n   const [users, setUsers] = useState(null);\n   const [message, setMessage] = useState(''); //later use messages for DM notes to specific players? message box in UI?\n   const [messages, setMessages] = useState({})\n  //  const [playerData, setPlayerData] = useState()\n   const [partyData, setPartyData] = useState(localStorage.getItem('partyStats') ? JSON.parse(localStorage.getItem('partyStats')) : {})\n   const [partyRolls, setPartyRolls] = useState({})\n   const [stats, setStats] = useState(localStorage.getItem('stats') ? JSON.parse(localStorage.getItem('stats')) : {\n    user: '',\n    hp: '0',\n    ac: '0',\n    melee: '0',\n    ranged: '0',\n    str: '0',\n    dex: '0',\n    con: '0',\n    int: '0',\n    wis: '0',\n    cha: '0',\n    dice: 0,\n    portrait: \"\"\n  })\n  const [roll, setRoll] = useState(0);\n\n\n  const ENDPOINT = 'localhost:5000'\n\n  useEffect(() => {\n    const { name, room } = queryString.parse(location.search);\n    \n    socket = io(ENDPOINT)\n\n    setName(name);\n    setRoom(room);\n    setStats({...stats, user: name})\n    \n    // set initial player state here?\n\n    \n    socket.emit('join', { name, room },  (error) => {\n      if(error) {\n        alert(error);\n      }\n    });\n\n    \n  }, [ENDPOINT, location.search]);\n\n  useEffect(() => {\n    socket.on('stats', (stats) => {\n        setPartyData({...partyData, [stats.user]: stats})\n        // I think the problem might be here(fixed)\n      });\n\n      socket.on(\"roomData\", ({ users }) => {\n        setUsers(users);\n      });\n    }, [partyData]);\n     \n\n\n    useEffect(() => {\n      socket.on('number', (number) => {\n        setPartyRolls({...partyRolls, [number.user]: number})\n      })\n      socket.on('roomData', ({ users }) => {\n        setUsers(users);\n      })\n    }, [partyRolls])\n\n\n\n\n    useEffect(() => {\n      window.localStorage.setItem('stats', JSON.stringify(stats))\n      window.localStorage.setItem('partyStats', JSON.stringify(partyData))\n    }, [stats, partyData]);\n\n\n\n    const sendPlayerData = (event) => {\n      event.preventDefault();\n      if(stats) {\n        socket.emit('sendPlayerData', stats)\n        console.log(stats)\n      }\n    }\n\n    const sendPlayerRoll = (number) => {\n      if(number) {\n        socket.emit('sendPlayerRoll', number)\n        console.log(number)\n      }\n    }\n    \n  return (\n    <div className=\"outerContainer\">\n      <Messaging />\n     {/* <button onClick={() => console.log(stats)}>Messages</button>\n      <button onClick={() => console.log(JSON.parse(localStorage.getItem('stats')))}>Local Storage</button>\n      <button onClick ={() => console.log(partyRolls)}>Party Rolls</button> */}\n      <div className=\"playersContainer\">\n      {users && users.map((user) => <Character key={user.id} name = {user.name}  individualRole={partyRolls[user.name]} partyData={partyData} stats={stats}/>)}\n      </div>\n\n      <div className='controlBox'>\n\n        <InputBar\n        name={name} \n        // playerData={playerData}\n        sendPlayerData={sendPlayerData}\n        sendPlayerRoll={sendPlayerRoll}\n        setStats={setStats}\n        stats={stats}\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default Play\n;","/Users/scottbillings/Desktop/D&D/client/src/Components/InputBar.js",["63","64"],"import React, { useState } from 'react';\nimport Dice from '../Resources/toppng.com-emini-polyhedral-black-green-gold-x7-green-black-rpg-dice-436x397.png';\nimport DiceRoll from './DiceRoll';\nimport './InputBar.css';\n\nconst InputBar = ({stats, setStats, name, sendPlayerData, sendPlayerRoll }) => {\n  \n\n  const  setDiceRoll = async (roll) => {\n    await setStats({...stats, dice: roll})\n    // sendPlayerData()\n  }\n\n  \n\n\n  return (\n  <form className=\"inputBarContainer\" onSubmit={sendPlayerData}>\n\n    <div className=\"charBox3\">\n      <img src=\"https://www.muddycolors.com/wp-content/uploads/2018/01/Art-id-314800-Human-Blade-final-363x600.jpg\" alt=\"pretty character\"></img>\n\n    </div>\n\n    <div className=\"charBox1\">\n\n    <div className=\"input-character-name\">\n      <h1>{name}</h1>\n    </div>\n\n    <div className=\"charInputDiv\">\n      <p>HP</p>\n    <input \n    className=\"charInput\"\n    value={stats.hp}\n    onChange={(event) => setStats({...stats, hp: event.target.value})}\n    // value={props.playerData}\n    // onChange={(event) => props.setPlayerData(event.target.value)}\n    // onKeyPress={event => event.key === 'Enter' ? props.sendPlayerData(event) : null}\n    >\n    </input>\n    </div>\n\n\n    <div className=\"charInputDiv\">\n      <p>AC</p>\n      <input className=\"charInput\"\n        value={stats.ac}\n        onChange={(event) => setStats({...stats, ac: event.target.value})}\n      >\n      </input>\n      {/* <button onClick={() => console.log(stats)}>ShowState</button> */}\n    </div>\n\n    <div className=\"charInputDiv\">\n      <p>Melee Bonus</p>\n      <input className=\"charInput\"\n      value={stats.melee}\n      onChange={(event) => setStats({...stats, melee: event.target.value})}\n      ></input>\n    </div>\n\n    <div className=\"charInputDiv\">\n      <p>Ranged Bonus</p>\n      <input className=\"charInput\"\n      value={stats.ranged}\n      onChange={(event) => setStats({...stats, ranged: event.target.value})}\n      ></input>\n    </div>\n\n    <div className=\"charInputDiv\">\n      <p>Portrait URL</p>\n      <input className=\"charInput\"\n      value={stats.ranged}\n      onChange={(event) => setStats({...stats, ranged: event.target.value})}>\n        \n      </input>\n    </div>\n\n    </div>\n\n  <div className=\"charBox2\">\n\n    <div className=\"charInputDiv\">\n      <p>Str Save</p>\n      <input className=\"charInput\"\n      value={stats.str}\n      onChange={(event) => setStats({...stats, str: event.target.value})}\n      ></input>\n    </div>\n\n    <div className=\"charInputDiv\">\n      <p>Dex Save</p>\n      <input className=\"charInput\"\n      value={stats.dex}\n      onChange={(event) => setStats({...stats, dex: event.target.value})}\n      ></input>\n    </div>\n\n    <div className=\"charInputDiv\">\n      <p>Con Save</p>\n      <input className=\"charInput\"\n      value={stats.con}\n      onChange={(event) => setStats({...stats, con: event.target.value})}\n      ></input>\n    </div>\n\n    <div className=\"charInputDiv\">\n      <p>Int save</p>\n      <input className=\"charInput\"\n      value={stats.int}\n      onChange={(event) => setStats({...stats, int: event.target.value})}\n      ></input>\n    </div>\n\n    <div className=\"charInputDiv\">\n      <p>Wis Save</p>\n      <input className=\"charInput\"\n      value={stats.wis}\n      onChange={(event) => setStats({...stats, wis: event.target.value})}\n      ></input>\n    </div>\n\n    <div className=\"charInputDiv\">\n      <p>Cha Save</p>\n      <input className=\"charInput\"\n      value={stats.cha}\n      onChange={(event) => setStats({...stats, cha: event.target.value})}\n      ></input>\n    </div>\n\n    <div className=\"submit-stats-container\">\n      <button className=\"submit-stats\" type=\"button\" onClick={sendPlayerData} >Update Stats</button>\n    </div>\n  </div>\n\n\n    <div className=\"charBox4\">\n      <img id=\"diceImage\" src={Dice} alt=\"dice\"></img>\n\n    </div>\n\n\n    <DiceRoll sendPlayerRoll={sendPlayerRoll} setStats={setStats} sendPlayerData={sendPlayerData}/>\n  {/* <button className='sendButton' type='submit'>Set Stats</button> */}\n  </form>\n\n  \n  )\n  \n}\n\nexport default InputBar","/Users/scottbillings/Desktop/D&D/client/src/Components/DiceRoll.js",[],"/Users/scottbillings/Desktop/D&D/client/src/Components/Character.js",[],"/Users/scottbillings/Desktop/D&D/client/src/Components/DiceLoad.js",[],"/Users/scottbillings/Desktop/D&D/client/src/Components/Messaging/Messaging.js",["65","66"],"/Users/scottbillings/Desktop/D&D/client/src/Components/Messaging/DropDowns.js",["67","68","69"],"/Users/scottbillings/Desktop/D&D/client/src/Components/Messaging/MessageInput.js",["70","71"],"/Users/scottbillings/Desktop/D&D/client/src/Components/Messaging/MessageDisplay.js",["72","73"],{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","severity":1,"message":"79","line":16,"column":11,"nodeType":"80","messageId":"81","endLine":16,"endColumn":15},{"ruleId":"78","severity":1,"message":"82","line":18,"column":11,"nodeType":"80","messageId":"81","endLine":18,"endColumn":18},{"ruleId":"78","severity":1,"message":"83","line":18,"column":20,"nodeType":"80","messageId":"81","endLine":18,"endColumn":30},{"ruleId":"78","severity":1,"message":"84","line":19,"column":11,"nodeType":"80","messageId":"81","endLine":19,"endColumn":19},{"ruleId":"78","severity":1,"message":"85","line":19,"column":21,"nodeType":"80","messageId":"81","endLine":19,"endColumn":32},{"ruleId":"78","severity":1,"message":"86","line":38,"column":10,"nodeType":"80","messageId":"81","endLine":38,"endColumn":14},{"ruleId":"78","severity":1,"message":"87","line":38,"column":16,"nodeType":"80","messageId":"81","endLine":38,"endColumn":23},{"ruleId":"88","severity":1,"message":"89","line":62,"column":6,"nodeType":"90","endLine":62,"endColumn":33,"suggestions":"91"},{"ruleId":"78","severity":1,"message":"92","line":1,"column":17,"nodeType":"80","messageId":"81","endLine":1,"endColumn":25},{"ruleId":"78","severity":1,"message":"93","line":9,"column":10,"nodeType":"80","messageId":"81","endLine":9,"endColumn":21},{"ruleId":"78","severity":1,"message":"92","line":1,"column":16,"nodeType":"80","messageId":"81","endLine":1,"endColumn":24},{"ruleId":"78","severity":1,"message":"94","line":1,"column":26,"nodeType":"80","messageId":"81","endLine":1,"endColumn":35},{"ruleId":"78","severity":1,"message":"94","line":1,"column":26,"nodeType":"80","messageId":"81","endLine":1,"endColumn":35},{"ruleId":"78","severity":1,"message":"95","line":6,"column":8,"nodeType":"80","messageId":"81","endLine":6,"endColumn":21},{"ruleId":"78","severity":1,"message":"96","line":6,"column":23,"nodeType":"80","messageId":"81","endLine":6,"endColumn":39},{"ruleId":"78","severity":1,"message":"92","line":1,"column":16,"nodeType":"80","messageId":"81","endLine":1,"endColumn":24},{"ruleId":"78","severity":1,"message":"94","line":1,"column":26,"nodeType":"80","messageId":"81","endLine":1,"endColumn":35},{"ruleId":"78","severity":1,"message":"92","line":1,"column":16,"nodeType":"80","messageId":"81","endLine":1,"endColumn":24},{"ruleId":"78","severity":1,"message":"94","line":1,"column":26,"nodeType":"80","messageId":"81","endLine":1,"endColumn":35},"no-native-reassign",["97"],"no-negated-in-lhs",["98"],"no-unused-vars","'room' is assigned a value but never used.","Identifier","unusedVar","'message' is assigned a value but never used.","'setMessage' is assigned a value but never used.","'messages' is assigned a value but never used.","'setMessages' is assigned a value but never used.","'roll' is assigned a value but never used.","'setRoll' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'stats'. Either include it or remove the dependency array. You can also do a functional update 'setStats(s => ...)' if you only need 'stats' in the 'setStats' call.","ArrayExpression",["99"],"'useState' is defined but never used.","'setDiceRoll' is assigned a value but never used.","'useEffect' is defined but never used.","'drop2Extended' is assigned a value but never used.","'setDrop2Extended' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"100","fix":"101"},"Update the dependencies array to be: [ENDPOINT, location.search, stats]",{"range":"102","text":"103"},[1635,1662],"[ENDPOINT, location.search, stats]"]